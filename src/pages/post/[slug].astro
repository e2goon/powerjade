---
export const prerender = true;

import { getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import { formatDate } from "../../lib/dateUtils";

export async function getStaticPaths() {
  const allPosts = await getCollection("posts");
  return allPosts.map((entry, i) => ({
    params: { slug: entry.slug },
    props: {
      entry,
      prevPost: i === 0 ? undefined : allPosts[i - 1],
      nextPost: i + 1 === allPosts.length ? undefined : allPosts[i + 1],
    },
  }));
}

const { entry, prevPost, nextPost } = Astro.props;
const { Content } = await entry.render();
---

<Layout title={`${entry.data.title} - powerjade`}>
  <article>
    <header class="text-center [&~.markdown]:mt-10">
      <h1 class="text-4xl font-bold leading-normal">{entry.data.title}</h1>
      <time class="text-xs text-zinc-500">
        {formatDate(entry.data.publishedDate)}
      </time>
    </header>

    <div class="markdown">
      <Content />
    </div>

    <hr class="my-10 border-zinc-800" />

    <div>
      <h2 class="sr-only">다른 포스트 보기</h2>
      <div class="grid grid-cols-2">
        {
          prevPost && (
            <a
              href={`/post/${prevPost.slug}`}
              class="underline decoration-wavy underline-offset-4"
            >
              👈
              {prevPost.data.title}
            </a>
          )
        }
        {
          nextPost && (
            <a
              href={`/post/${nextPost.slug}`}
              class="col-start-2 text-right underline decoration-wavy underline-offset-4"
            >
              {nextPost.data.title}
              👉
            </a>
          )
        }
      </div>
    </div>
  </article>
</Layout>
